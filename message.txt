feat: Implement dashboard for user projects view and integrate frontend with backend

- Created frontend API service functions to fetch projects and tasks data
  - Added `getProjects` and `getTasks` functions in `api.js`
  
- Set up routing for the dashboard
  - Imported `Dashboard` component in routes
  - Added route for `/dashboard` to render `Dashboard` component

- Developed `Dashboard.js` component
  - Utilized `getProjects` and `getTasks` functions to fetch and display projects and tasks
  - Applied basic styling for dashboard layout in `Dashboard.css`

- Styled `Dashboard.css` for user projects view
  - Defined layout styles for wrapper, centered content, projects container, sidebar, tasks list container, and titles

- Updated server routes in `server.js` to include project and task endpoints
  - Integrated `authRoutes`, `projectRoutes`, and `taskRoutes` with respective paths

- Fixed multiple backend integration issues